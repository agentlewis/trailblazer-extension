/** @jsx React.DOM */
var React = require('react');
var renderMap = require('app/render');
var d3ify = require('app/d3ify');
var d3 = require('d3');
require('d3-tip');
var tooltipView = require('app/tooltip-view');

module.exports = React.createClass({
  getInitialState: function () {
    return {
      updateable: false,
      force: null,
    };
  },

  render: function () {
    return  <svg
              id={this.props.id}
              width="100%"
              height="100%"
              preserveAspectRatio="xMidYMid meet"
              viewBox={"0 0 " + this.props.width + " " + this.props.height} >
              <g id="zoom">
                <g id="mapG">
                  <rect
                    className="overlay"
                    width={this.props.width}
                    height={this.props.height} >
                  </rect>
                </g>
              </g>
            </svg>;
  },

  componentDidMount: function () {
    var options = {
      selector: this.props.selector,
      width: this.props.width,
      height: this.props.height
    };
    var selector = this.props.selector,
        data = this.props.data;

    renderMap(d3ify(data), options, this);
  },

  registerForceListeners: function () {
    this.state.force.on('end', function () {
      this.setState({updateable: true});
    }.bind(this));
  },

  componentDidUpdate: function () {
    if (this.state.force || !this.state.updateable) {
      this.registerForceListeners();
    };

    if (this.state.updateable) {
      var data = d3ify(this.props.data);
      //NOTE React or D3 doesn't allow selection of nodes directly through d3.selectAll('.node')
      // for some reason
      var map = d3.select('#mapG') 

      map .selectAll('.node')
          .data(data.nodes, function(d) { return d.id })
          .classed('open', function(d) { return d.tabId });   
    };
  }
})
