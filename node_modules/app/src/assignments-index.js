/** @jsx React.DOM */
var React 			= require('react')
 , 	AssignmentItem	= require('app/components/assignment-item');

var _ = require('lodash');

      // nodeState: Map
        // loading: Boolean
        // error: String
        // nodeIndex: Map
      // assignmentState: Map
      //   loading: Boolean
      //   error: String
      //   assignmentsIndex: Map
      //   currentAssignment: Integer


/**
 * The Assignments Index view.
 *
 * Renders a list of <AssignmentItem> elements
 */
module.exports = React.createClass({

  render: function () {
    var assignmentState = this.props.state.AssignmentState;
    console.log('assignmentState', assignmentState);
    var assignmentObj, items;
    //transform Immutable asignment map to js array
    if (assignmentState.assignmentIndex && assignmentState.assignmentIndex.toJS) {
      assignmentObj = assignmentState.assignmentIndex.toJS();
      items = Object.keys(assignmentObj).map(function (key) { return assignmentObj[key] });
    } else {
      items = [];
    }



    console.log('items', items)
  	console.log(this.props, 'props in assignment-index')
    var assignments = items.map(function (assignment) {
      return <AssignmentItem item={assignment} key={assignment.id} select={this.props.select}/>;
    }.bind(this));

    return <ul>{assignments}</ul>;
  },


  shouldComponentUpdate: function (nextProps) {
    //NOTE use this method to test if state has mutated
    // if (nextProps.state.assignmentState === this.props.state.assignmentState) {
    //   return false;
    // } else {
    //   return true;
    // }


  }



});


