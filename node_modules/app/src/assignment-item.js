/** @jsx React.DOM */
var React       = require('react');


module.exports = React.createClass({
  getInitialState: function () {
    return {
      show: true
    }
  },

  render: function () {
    var klass = this.state.show ? 'show' : 'destroy';

                //TODO change path
    return  <div className={klass} >
              <li
                key={this.props.item.id}
                onClick={this.handleClick} >
                {this.props.item.title}
                <a onClick={this.destroyAnimation}>
                  <img src="/src/ui/icons/delete-icon.svg" />
                </a>
              </li>
            </div>
  },

  componentDidMount: function () {
    this.getDOMNode().addEventListener('webkitTransitionEnd', this.destroy)
  },

  handleClick: function () {
    var id = this.props.item.id;
    console.log(this.props, id)

    this.props.select(id);
    //TODO change messaging
    // chrome.runtime.sendMessage({action: 'getNodes', assignmentId: id});
    // chrome.runtime.sendMessage({
    //   action: "trackUIEvent",
    //   eventName: "ui.trails.assignment.click",
    //   eventData: {
    //     assignmentId: this.props.item.id,
    //     userId:       this.props.item.user_id
    //   }
    // });
    //TODO change path
    // window.location.href  = "/src/ui/pages/map.html#assignment=" + id;
  },

  destroy: function () {
    var id = this.props.item.id;
    //TODO change messaging
    chrome.runtime.sendMessage({action: 'destroyAssignment', assignmentId: id});
  },

  destroyAnimation: function (evt) {
    evt.stopPropagation();
    if (window.confirm("Are you sure you want to delete " + this.props.item.title + "?")) {
      this.setState({show: false});
    //TODO change messaging
      chrome.runtime.sendMessage({
        action: "trackUIEvent",
        eventName: "ui.trails.assignment.delete.confirm",
        eventData: {
          assignmentId: this.props.item.id,
          userId:       this.props.item.user_id
        }
      });
    }
  }
});