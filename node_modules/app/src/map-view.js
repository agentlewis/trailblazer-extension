/** @jsx React.DOM */
var React = require('react');
var _ = require('lodash');

//components
var AssignmentTitle = require('app/components/assignment-title');
var Map = require('app/components/map');
var ShareMap = require('app/components/share-map');

// var state = {
//       nodeState: {
//         loading: false,
//         error: null,
//         nodeIndex: {}
//       },
//       assignmentState: {
//         loading: false,
//         error: null,
//         assignmentsIndex: {},
//         currentAssignment: null
//       }
// };


module.exports = React.createClass({

  getInitialState: function () {
    return {
      sharePopoverState: false
    }
  },

  render: function () {
    var nodeObj = {};
    _.each(this.props.nodes, function (node) {
      nodeObj[node.localId] = node;
    });

    var visible, shareText, title, url;

    visible       = this.props.assignment.visible; //state
    shareText     = (visible) ? "Shared" : "Share"; //state
    title         = this.props.assignment.title;
    url           = this.props.assignment.url;

     //nodes are immutable
     var data = {
      nodeObj: nodeObj,
      assignment: this.props.assignment
    };

    return  <div className="map-view-wrapper" onClick={this.handleClick}>
              <AssignmentTitle assignment={this.props.assignment} actions={this.props.actions} constants={this.props.constants} />
              <div id="map-container">
                <Map id="map" width={960} height={500} selector="#map" data={data} />
              </div>
              <span className="help">
                <a
                  className="feedback"
                  href="mailto:hello@trailblazer.io?subject=Trailblazer In-App Feedback"
                  title="Problem? Let us know." 
                  target="_blank">
                  Feedback |
                </a>
                <a 
                  className="tutorial" 
                  href="http://youtu.be/u1auxOODJ88" 
                  title="How do I use Trailblazer?" 
                  target="_blank" >
                  <img src="/assets/icons/tutorial-icon.svg" />
                </a>
                <ShareMap
                  assignmentId={this.props.assignment.id}
                  visible={visible} 
                  mapURL={url} 
                  popover={this.state.sharePopoverState}
                  actions={this.props.actions}
                  togglePopover={this.togglePopover} />
              </span>
            </div>;
  },

  handleClick: function (evt) {

    //remove popover when clicking anywhere else
    if (this.state.sharePopoverState &&
        !document.getElementById('share-popover').contains(evt.target)) {
      this.setState({sharePopoverState: false});
    };
  },

  togglePopover: function () {
    var bool = !this.state.sharePopoverState;
    this.setState({sharePopoverState: bool});
  }
});

