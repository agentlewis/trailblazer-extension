/** @jsx React.DOM */
var React = require('react');

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function () {
    //possible antipattern of props in state
    return {
      editable: false,
      initValue: this.props.title
    };
  },

  render: function () {
    var editable = this.state.editable;

    if (editable) {
      return React.DOM.div(null, 
                React.DOM.input({
                type: "text", 
                value: this.state.initValue, 
                onChange: this.handleChange, 
                onBlur: this.handleBlur}), 
                React.DOM.img({src: "/ui/icons/editable-icon.svg"})
              )
    } else {
      return  React.DOM.h1(null, 
                React.DOM.a({href: "#"}, 
                  this.state.initValue, 
                  React.DOM.img({
                    onClick: this.handleIconClick, 
                    src: "/ui/icons/editable-icon.svg"})
                )
              );
    };
  },

  handleIconClick: function () {
    this.setState({editable: true})
  },

  handleChange: function (evt) {
    this.setState({initValue: evt.target.value})
  },

  handleBlur: function (evt) {
    console.log('blur', evt, this.state)
    this.setState({editable: false});
    chrome.runtime.sendMessage({
      action: 'updateAssignment', 
      assignmentId: this.props.id, 
      newTitle: this.state.initValue
    });
  }
});